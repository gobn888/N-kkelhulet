{"ast":null,"code":"import _defineProperty from\"/Users/annabatzeri/Desktop/N\\xF8kkelhulet/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/annabatzeri/Desktop/N\\xF8kkelhulet/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/annabatzeri/Desktop/N\\xF8kkelhulet/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import{useState,useEffect}from\"react\";// import the useState and useeffect hook.\nimport{faCircleExclamation}from\"@fortawesome/free-solid-svg-icons\";// import an icon.\nimport{faBan}from\"@fortawesome/free-solid-svg-icons\";import{faSave,faShare,faPlus}from\"@fortawesome/free-solid-svg-icons\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";// import FontAwesomeIcon component.\nimport Tooltip from\"@mui/material/Tooltip\";// import Tooltip component.\nimport keyholeLgog from\"./circle-keyhole-logo.png\";// import an image\nimport{faCircleInfo}from\"@fortawesome/free-solid-svg-icons\";// import an icon\nimport{faXmarkCircle}from\"@fortawesome/free-solid-svg-icons\";// import an icon\nimport Select from\"react-select\";// import Select component\n// This component is called Kategori1\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Kategori1=function Kategori1(){// State variables for showing results and empty result message\nvar _useState=useState(null),_useState2=_slicedToArray(_useState,2),showNokkelhulletResults=_useState2[0],setShowNokkelhulletResults=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),showErnaeringsResults=_useState4[0],setShowErnaeringsResults=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),showHelsepåstander=_useState6[0],setShowHelsepåstander=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),showEmptyResult=_useState8[0],setShowEmptyResult=_useState8[1];// initialize state variable for showing empty result message.\n//state variable to store the user's food type selection (solid or liquid) and the low sugars claim result\nvar _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),foodType=_useState10[0],setFoodType=_useState10[1];var _useState11=useState(null),_useState12=_slicedToArray(_useState11,2),lowSugars=_useState12[0],setLowSugars=_useState12[1];//state variable for SugarsFree claim\nvar _useState13=useState(null),_useState14=_slicedToArray(_useState13,2),sugarsFree=_useState14[0],setSugarsFree=_useState14[1];//state variable to track whether the product meets the WITH NO ADDED SUGARS claim or not\nvar _useState15=useState(null),_useState16=_slicedToArray(_useState15,2),withNoAddedSugars=_useState16[0],setWithNoAddedSugars=_useState16[1];//state variable to track whether the product meets the \"CONTAINS NATURALLY OCCURRING SUGARS\" claim or not\nvar _useState17=useState(null),_useState18=_slicedToArray(_useState17,2),containsNaturallyOccurringSugars=_useState18[0],setContainsNaturallyOccurringSugars=_useState18[1];// State variable for tracking if the button is clicked\nvar _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),buttonClicked=_useState20[0],setButtonClicked=_useState20[1];// useEffect hook for checking the conditions for the nutrition claims when button is clicked\nuseEffect(function(){if(buttonClicked){if(lowSugars&&withNoAddedSugars&&containsNaturallyOccurringSugars&&sugarsFree){setShowErnaeringsResults(true);}else{setShowErnaeringsResults(false);}}},[lowSugars,withNoAddedSugars,containsNaturallyOccurringSugars,buttonClicked,sugarsFree]);//state for controlling the buttons' visibility\nvar _useState21=useState(false),_useState22=_slicedToArray(_useState21,2),showButtons=_useState22[0],setShowButtons=_useState22[1];// State variables to control the visibility of the information sections\nvar _useState23=useState(false),_useState24=_slicedToArray(_useState23,2),infoNokkelhullet=_useState24[0],setInfoNokkelhullet=_useState24[1];var _useState25=useState(false),_useState26=_slicedToArray(_useState25,2),infoErnaerings=_useState26[0],setInfoErnaerings=_useState26[1];var _useState27=useState(false),_useState28=_slicedToArray(_useState27,2),infoHelsepåstander=_useState28[0],setInfoHelsepåstander=_useState28[1];// Function to show an information section based on the container parameter\nvar onClickInfo=function onClickInfo(container){if(container===\"nokkelhullet\"){setInfoNokkelhullet(true);}else if(container===\"ernaerings\"){setInfoErnaerings(true);}else if(container===\"helsepåstander\"){setInfoHelsepåstander(true);}};// Function to hide an information section based on the container parameter\nvar onClickClose=function onClickClose(container){if(container===\"nokkelhullet\"){setInfoNokkelhullet(false);}else if(container===\"ernaerings\"){setInfoErnaerings(false);}else if(container===\"helsepåstander\"){setInfoHelsepåstander(false);}};// initialize State variables for handling input fields and validation errors\nvar _useState29=useState(false),_useState30=_slicedToArray(_useState29,2),energikj=_useState30[0],setEnergikj=_useState30[1];var _useState31=useState(false),_useState32=_slicedToArray(_useState31,2),energikcal=_useState32[0],setEnergikcal=_useState32[1];var _useState33=useState(false),_useState34=_slicedToArray(_useState33,2),fett=_useState34[0],setFett=_useState34[1];var _useState35=useState(false),_useState36=_slicedToArray(_useState35,2),fettNull=_useState36[0],setFettNull=_useState36[1];var _useState37=useState(false),_useState38=_slicedToArray(_useState37,2),mettede=_useState38[0],setMettede=_useState38[1];var _useState39=useState(false),_useState40=_slicedToArray(_useState39,2),mettedeNull=_useState40[0],setMettedeNull=_useState40[1];var _useState41=useState(false),_useState42=_slicedToArray(_useState41,2),karbohydrat=_useState42[0],setKarbohydrat=_useState42[1];var _useState43=useState(false),_useState44=_slicedToArray(_useState43,2),naturligSukker=_useState44[0],setNaturligSukker=_useState44[1];var _useState45=useState(false),_useState46=_slicedToArray(_useState45,2),hvoravSukkerarter=_useState46[0],setHvoravSukkerarter=_useState46[1];var _useState47=useState(false),_useState48=_slicedToArray(_useState47,2),hvoravSukkerarterNull=_useState48[0],setHvoravSukkerarterNull=_useState48[1];var _useState49=useState(false),_useState50=_slicedToArray(_useState49,2),kostfiber=_useState50[0],setKostfiber=_useState50[1];var _useState51=useState(false),_useState52=_slicedToArray(_useState51,2),protein=_useState52[0],setProtein=_useState52[1];var _useState53=useState(false),_useState54=_slicedToArray(_useState53,2),salt=_useState54[0],setSalt=_useState54[1];var _useState55=useState(false),_useState56=_slicedToArray(_useState55,2),saltNull=_useState56[0],setSaltNull=_useState56[1];var _useState57=useState(false),_useState58=_slicedToArray(_useState57,2),sodium=_useState58[0],setSodium=_useState58[1];var _useState59=useState(false),_useState60=_slicedToArray(_useState59,2),sodiumNull=_useState60[0],setSodiumNull=_useState60[1];// initialize State variable for storing nutrition information entered by user/input values\nvar _useState61=useState({energikj:\"\",energikcal:\"\",fett:\"\",mettede:\"\",karbohydrat:\"\",naturligSukker:\"\",hvoravSukkerarter:\"\",kostfiber:\"\",protein:\"\",salt:\"\",sodium:\"\"}),_useState62=_slicedToArray(_useState61,2),nutrition=_useState62[0],setNutrition=_useState62[1];// Handler for updating nutrition state/state variable based on input field changes/input values\nvar changeHandle=function changeHandle(event){console.log(\"changeHandle ===\",event.target,event.target.value);setNutrition(_objectSpread(_objectSpread({},nutrition),{},_defineProperty({},event.target.name,event.target.value)));};// define function to handle form submission\nvar onClick=function onClick(e){e.preventDefault();setButtonClicked(true);setShowHelsepåstander(true);setShowButtons(true);console.log(\"onclick ===\",selectsPart,nutrition);// Check if all required fields are filled out and within valid ranges\n// The if statement checks if all required inputs are non-empty and meet the nutritional requirements\nif(nutrition.fett!==\"\"&&nutrition.fett<=3&&nutrition.mettede!==\"\"&&nutrition.mettede<=0.6&&nutrition.karbohydrat!==\"\"&&nutrition.naturligSukker!==\"\"&&nutrition.hvoravSukkerarter!==\"\"&&nutrition.hvoravSukkerarter<=1&&nutrition.kostfiber!==\"\"&&nutrition.protein!==\"\"){// If all requirements are met, display the nutrition results\nsetShowNokkelhulletResults(true);// Hide any empty result messages or error messages\nsetShowEmptyResult(false);// Check if the user selected \"energikj\" and if nutrition input lable of \"energikj\" is not empty\nif(selectsPart===\"energikj\"&&nutrition.energikj!==\"\"){setEnergikj(false);}// Check if the user selected \"energikcal\" and if nutrition input lable of \"energikcal\" is not empty\nif(selectsPart===\"energikcal\"&&nutrition.energikcal!==\"\"){setEnergikcal(false);}// Reset all input validation errors\nsetFett(false);setFettNull(false);setMettede(false);setMettedeNull(false);setKarbohydrat(false);setNaturligSukker(false);setHvoravSukkerarter(false);setHvoravSukkerarterNull(false);setKostfiber(false);setProtein(false);// If any inputs are missing or do not meet the requirements, show appropriate error messages\n}else{if(selectsPart===\"energikj\"){console.log(\"energikj ===\",selectsPart,nutrition.energikj);if(nutrition.energikj===\"\"||nutrition.energikj<0){console.log(\"energikj ===\",selectsPart,nutrition.energikj);setEnergikj(true);setShowNokkelhulletResults(false);setShowEmptyResult(true);}else{setEnergikj(false);}}if(selectsPart===\"energikcal\"){console.log(\"energikcal ===\",selectsPart,nutrition.energikcal);if(nutrition.energikcal===\"\"||nutrition.energikcal<0){console.log(\"energikcal ===\",selectsPart,nutrition.energikcal);setEnergikcal(true);setShowNokkelhulletResults(false);setShowEmptyResult(true);}else{setEnergikcal(false);}}// repeat for each nutrition value...\nif(nutrition.fett===\"\"||nutrition.fett<0){setFettNull(true);setShowNokkelhulletResults(false);setShowEmptyResult(true);}else{setFettNull(false);}if(nutrition.fett>3){setFett(true);setShowNokkelhulletResults(false);}else{setFett(false);}if(nutrition.mettede===\"\"||nutrition.mettede<0){setMettedeNull(true);setShowNokkelhulletResults(false);setShowEmptyResult(true);}else{setMettedeNull(false);}if(nutrition.mettede>0.6){setMettede(true);setShowNokkelhulletResults(false);}else{setMettede(false);}// Check if the 'karbohydrat' input is missing or negative, and display an error message if necessary\nif(nutrition.karbohydrat===\"\"||nutrition.karbohydrat<0){setKarbohydrat(true);setShowNokkelhulletResults(false);setShowEmptyResult(true);}else{setKarbohydrat(false);}if(nutrition.naturligSukker===\"\"||nutrition.naturligSukker<0){setNaturligSukker(true);setShowNokkelhulletResults(false);setShowEmptyResult(true);}else{setNaturligSukker(false);}// Check if the 'hvoravSukkerarter' input is missing, negative or above the maximum allowed value (1),\n// and display an error message if necessary\nif(nutrition.hvoravSukkerarter===\"\"||nutrition.hvoravSukkerarter<0){setHvoravSukkerarterNull(true);setShowNokkelhulletResults(false);setShowEmptyResult(true);}else{setHvoravSukkerarterNull(false);}if(nutrition.hvoravSukkerarter>1){setHvoravSukkerarter(true);setShowNokkelhulletResults(false);}else{setHvoravSukkerarter(false);}if(nutrition.kostfiber===\"\"||nutrition.kostfiber<0){setKostfiber(true);setShowNokkelhulletResults(false);setShowEmptyResult(true);}else{setKostfiber(false);}if(nutrition.protein===\"\"||nutrition.protein<0){setProtein(true);setShowNokkelhulletResults(false);setShowEmptyResult(true);}else{setProtein(false);}// If sodium is selected and the input is missing, negative, or over the limit\nif(selectedSaltOrSodium===\"sodium\"&&(nutrition.sodium===\"\"||nutrition.sodium<0||nutrition.sodium>0.2)){if(nutrition.sodium===\"\"||nutrition.sodium<0){setSodiumNull(true);// set sodiumNull state to true if sodium is missing or negative\n}else{setSodiumNull(false);// set sodiumNull state to false if sodium is not missing and is not negative\n}setSodium(true);setShowNokkelhulletResults(false);setShowEmptyResult(true);}else{setSodium(false);setSodiumNull(false);// set sodiumNull state to false if sodium is not missing and is not negative\n}// If salt is selected and the input is missing, negative, or over the limit\nif(selectedSaltOrSodium===\"salt\"&&(nutrition.salt===\"\"||nutrition.salt<0||nutrition.salt>0.5)){if(nutrition.salt===\"\"||nutrition.salt<0){setSaltNull(true);// set saltNull state to true if salt is missing or negative\n}else{setSaltNull(false);// set saltNull state to false if salt is not missing and is not negative\n}setSalt(true);setShowNokkelhulletResults(false);setShowEmptyResult(true);}else{setSalt(false);setSaltNull(false);// set saltNull state to false if salt is not missing and is not negative\n}}// Check for the \"LOW SUGARS\" claim\nif(foodType===\"solid\"&&parseFloat(nutrition.karbohydrat)<=5){setLowSugars(true);}else if(foodType===\"liquid\"&&parseFloat(nutrition.karbohydrat)<=2.5){setLowSugars(true);}else{setLowSugars(false);}// Check for the \"SUGARS-FREE\" claim\nif(foodType===\"solid\"&&parseFloat(nutrition.karbohydrat)<=0.5){setSugarsFree(true);}else if(foodType===\"liquid\"&&parseFloat(nutrition.karbohydrat)<=0.5){setSugarsFree(true);}else{setSugarsFree(false);}// Check the condition for the \"WITH NO ADDED SUGARS\" nutrition claim\nif(nutrition.hvoravSukkerarter===\"0\"&&nutrition.karbohydrat>0){setWithNoAddedSugars(true);}else{setWithNoAddedSugars(false);}// Check the condition for the \"CONTAINS NATURALLY OCCURRING SUGARS\" nutrition claim\nif(nutrition.hvoravSukkerarter===\"0\"&&nutrition.karbohydrat===nutrition.naturligSukker){setContainsNaturallyOccurringSugars(true);}else{setContainsNaturallyOccurringSugars(false);}};// create an array of energy units to select from\nvar selectUnit=[{value:\"energikj\",// This is the value that will be used in the code\nlabel:\"(kj)\"// This is the value that will be displayed to the user in the dropdown\n},{value:\"energikcal\",label:\"(kcal)\"}];// Declare a state variable for the select dropdown.\nvar _useState63=useState(\"\"),_useState64=_slicedToArray(_useState63,2),selectsPart=_useState64[0],setSelectPart=_useState64[1];// A function to handle changes to the select dropdown energy unit\nvar handlerPart=function handlerPart(event){var inputVal=document.getElementsByName(event.value);// Get the input elements with the name of the selected option\nconsole.log(\"handlerPart ===\",event,nutrition,inputVal);// Log the selected option, current nutrition state, and input elements to the console\nsetSelectPart(event.value);// Update the selectsPart state with the value of the selected option\n};//a selection array  for salt and sodium to select from\nvar selectNutrient=[{value:\"salt\",label:\"Salt (g)\"},{value:\"sodium\",label:\"Natrium (g)\"}];//declare a state variable for the selected nutrient\nvar _useState65=useState(\"\"),_useState66=_slicedToArray(_useState65,2),selectedSaltOrSodium=_useState66[0],setSelectedSaltOrSodium=_useState66[1];//a function to handle the changes to the selected nutrient\nvar handleNutrient=function handleNutrient(event){setNutrition(_objectSpread(_objectSpread({},nutrition),{},_defineProperty({},selectedSaltOrSodium,\"\")));// Clear the previous value\nsetSelectedSaltOrSodium(event.value);};//create an array of food types to select from\nvar foodTypes=[{value:\"solid\",label:\"Fast form\"},{value:\"liquid\",label:\"Flytende form\"}];return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"foodType\",children:\"Velg type matvare:\"}),/*#__PURE__*/_jsx(Select,{className:\"form-control\",id:\"foodType\",options:foodTypes,onChange:function onChange(e){return setFoodType(e.value);}// update the onFoodTypeChange function to directly set the food type state\n,placeholder:\"Velg type matvare\"})]}),/*#__PURE__*/_jsxs(\"h5\",{children:[\"N\\xE6ringsinnhold per 100\",\" \",foodType===\"solid\"?\"g\":foodType===\"liquid\"?\"ml\":\"g/ml\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-light\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table table-striped\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{scope:\"col\",className:\"table-font\",children:\"Energi eller n\\xE6ringsstoff\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",className:\"table-font\",children:\"Mengde\"})]})}),/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{className:(energikj,energikcal?\"alert-box\":null),children:[/*#__PURE__*/_jsxs(\"th\",{scope:\"row\",className:\"table-font\",children:[energikj&&energikcal?/*#__PURE__*/_jsx(Tooltip,{title:\"Mangler verdi i energi (kJ/Kcal) parameter\",placement:\"right\",arrow:true,children:/*#__PURE__*/_jsx(\"div\",{className:\"icon\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"alert-icon\",icon:faCircleExclamation})})}):null,\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsx(\"label\",{for:\"energiunit\",class:\"form-label\",children:\"Energi\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsx(Select,{placeholder:/*#__PURE__*/_jsx(\"div\",{children:\"Velg enhet\"}),className:\"form-select-md mb-3\",options:selectUnit,onChange:function onChange(e){return handlerPart(e);}})})]})]}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",step:\"any\",name:selectsPart,onChange:changeHandle,className:\"form-control\"})})]}),/*#__PURE__*/_jsxs(\"tr\",{className:fett?\"alert-box\":null||fettNull?\"alert-box\":null,children:[/*#__PURE__*/_jsxs(\"th\",{scope:\"row\",className:\"table-font\",children:[fett?/*#__PURE__*/_jsx(Tooltip,{title:\"Produktet innfrir ikke N\\xF8kkelhullet p\\xE5 grunn av mengden fett. Mengden p\\xE5 fett m\\xE5 v\\xE6re lavere enn eller lik 3/ 100 g for \\xE5 m\\xF8te kravene for N\\xF8kkelhullsmerking.\",placement:\"right\",arrow:true,children:/*#__PURE__*/_jsx(\"div\",{className:\"icon\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"alert-icon\",icon:faBan})})}):null,fettNull?/*#__PURE__*/_jsx(Tooltip,{title:\"Mangler verdi i fett parameter\",placement:\"right\",arrow:true,children:/*#__PURE__*/_jsx(\"div\",{className:\"icon\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"alert-icon\",icon:faCircleExclamation})})}):null,\" \",\"Fett (g)\"]}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",step:\"any\",name:\"fett\",value:nutrition.fett,onChange:changeHandle,className:\"form-control\"})})]}),/*#__PURE__*/_jsxs(\"tr\",{className:mettede?\"alert-box\":null||mettedeNull?\"alert-box\":null,children:[/*#__PURE__*/_jsxs(\"th\",{scope:\"row\",className:\"table-font\",children:[mettede?/*#__PURE__*/_jsx(Tooltip,{title:\"Produktet innfrir ikke N\\xF8kkelhullet p\\xE5 grunn av mengden mettede fettsyrer. Mengden p\\xE5 mettede fettsyrer m\\xE5 v\\xE6re lavere enn eller lik 0.6 / 100 g for \\xE5 m\\xF8te kravene for N\\xF8kkelhullsmerking.\",placement:\"right\",arrow:true,children:/*#__PURE__*/_jsx(\"div\",{className:\"icon\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"alert-icon\",icon:faBan})})}):null,mettedeNull?/*#__PURE__*/_jsx(Tooltip,{title:\"Mangler verdi i mettede fettsyrer parameter\",placement:\"right\",arrow:true,children:/*#__PURE__*/_jsx(\"div\",{className:\"icon\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"alert-icon\",icon:faCircleExclamation})})}):null,\" \",\"Mettede fettsyrer (g)\"]}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",step:\"any\",name:\"mettede\",value:nutrition.mettede,onChange:changeHandle,className:\"form-control\"})})]}),/*#__PURE__*/_jsxs(\"tr\",{className:karbohydrat?\"alert-box\":null,children:[/*#__PURE__*/_jsxs(\"th\",{scope:\"row\",className:\"table-font\",children:[karbohydrat?/*#__PURE__*/_jsx(Tooltip,{title:\"Mangler verdi i karbohydrat parameter\",placement:\"right\",arrow:true,children:/*#__PURE__*/_jsx(\"div\",{className:\"icon\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"alert-icon\",icon:faCircleExclamation})})}):null,\" \",\"Karbohydrat (g)\"]}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",step:\"any\",name:\"karbohydrat\",value:nutrition.karbohydrat,onChange:changeHandle,className:\"form-control\"})})]}),/*#__PURE__*/_jsxs(\"tr\",{className:naturligSukker?\"alert-box\":null,children:[/*#__PURE__*/_jsxs(\"th\",{scope:\"row\",className:\"table-font\",children:[naturligSukker?/*#__PURE__*/_jsx(Tooltip,{title:\"Mangler verdi i naturligSukker parameter\",placement:\"right\",arrow:true,children:/*#__PURE__*/_jsx(\"div\",{className:\"icon\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"alert-icon\",icon:faCircleExclamation})})}):null,\" \",\"\\u2022 Naturlig innhold av sukker (g)\"]}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",step:\"any\",name:\"naturligSukker\",value:nutrition.naturligSukker,onChange:changeHandle,className:\"form-control\"})})]}),/*#__PURE__*/_jsxs(\"tr\",{className:hvoravSukkerarter?\"alert-box\":null||hvoravSukkerarterNull?\"alert-box\":null,children:[/*#__PURE__*/_jsxs(\"th\",{scope:\"row\",className:\"table-font\",children:[hvoravSukkerarter?/*#__PURE__*/_jsx(Tooltip,{title:\"Produktet innfrir ikke N\\xF8kkelhullet p\\xE5 grunn av mengden hvoravSukkerarter. Mengden p\\xE5 hvoravSukkerarter m\\xE5 v\\xE6re lavere enn eller lik 1 g/ 100 g for \\xE5 m\\xF8te kravene for N\\xF8kkelhullsmerking.\",placement:\"right\",arrow:true,children:/*#__PURE__*/_jsx(\"div\",{className:\"icon\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"alert-icon\",icon:faBan})})}):null,hvoravSukkerarterNull?/*#__PURE__*/_jsx(Tooltip,{title:\"Mangler verdi i hvorav sukkerarter parameter\",placement:\"right\",arrow:true,children:/*#__PURE__*/_jsx(\"div\",{className:\"icon\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"alert-icon\",icon:faCircleExclamation})})}):null,\" \",\"\\u2022 Hvorav tilsatte sukkerarter (g)\"]}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",step:\"any\",name:\"hvoravSukkerarter\",value:nutrition.hvoravSukkerarter,onChange:changeHandle,className:\"form-control\"})})]}),/*#__PURE__*/_jsxs(\"tr\",{className:kostfiber?\"alert-box\":null,children:[/*#__PURE__*/_jsxs(\"th\",{scope:\"row\",className:\"table-font\",children:[kostfiber?/*#__PURE__*/_jsx(Tooltip,{title:\"Mangler verdi i kostfiber parameter\",placement:\"right\",arrow:true,children:/*#__PURE__*/_jsx(\"div\",{className:\"icon\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"alert-icon\",icon:faCircleExclamation})})}):null,\" \",\"\\u2022 Kostfiber (g)\"]}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",step:\"any\",name:\"kostfiber\",value:nutrition.kostfiber,onChange:changeHandle,className:\"form-control\"})})]}),/*#__PURE__*/_jsxs(\"tr\",{className:protein?\"alert-box\":null,children:[/*#__PURE__*/_jsxs(\"th\",{scope:\"row\",className:\"table-font\",children:[protein?/*#__PURE__*/_jsx(Tooltip,{title:\"Mangler verdi i protein parameter\",placement:\"right\",arrow:true,children:/*#__PURE__*/_jsx(\"div\",{className:\"icon\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"alert-icon\",icon:faCircleExclamation})})}):null,\" \",\"Protein (g)\"]}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",step:\"any\",name:\"protein\",value:nutrition.protein,onChange:changeHandle,className:\"form-control\"})})]}),/*#__PURE__*/_jsxs(\"tr\",{className:salt||sodium?\"alert-box\":null,children:[/*#__PURE__*/_jsxs(\"th\",{scope:\"row\",className:\"table-font\",children:[nutrition[selectedSaltOrSodium]?/*#__PURE__*/_jsx(Tooltip,{title:selectedSaltOrSodium===\"sodium\"?\"Sodium must be less than or equal to 0.2g/100g\":\"Salt must be less than or equal to 0.5g/100g\",placement:\"right\",arrow:true,children:/*#__PURE__*/_jsx(\"div\",{className:\"icon\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"alert-icon\",icon:faCircleExclamation})})}):null,\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsxs(\"label\",{for:\"nutrientunit\",class:\"form-label\",children:[selectedSaltOrSodium,\" \"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsx(Select,{placeholder:/*#__PURE__*/_jsx(\"div\",{children:\"Velg n\\xE6ringsstoff\"}),className:\"form-select-md mb-3\",options:selectNutrient,onChange:function onChange(e){return handleNutrient(e);}})})]})]}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",step:\"any\",name:selectedSaltOrSodium// Use the selected nutrient as the name\n,value:nutrition[selectedSaltOrSodium]// display the current value for the selected nutrient\n,onChange:changeHandle,className:\"form-control\"})})]})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-12 button-div\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary btn-lg button-search\",onClick:onClick,children:\"Beregn\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6\",children:[showNokkelhulletResults?/*#__PURE__*/_jsxs(\"div\",{className:\"container n\\xF8kkelhullet-food-result-container\",children:[/*#__PURE__*/_jsx(\"img\",{src:keyholeLgog,className:\"keyhole-logo img-fluid\",alt:\"keyhole logo\"}),/*#__PURE__*/_jsx(\"h5\",{children:\"N\\xF8kkelhullet\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-10\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Produktet innfrir N\\xF8kkelhullet. \"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-2\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"info-button\",icon:faCircleInfo,onClick:function onClick(){return onClickInfo(\"nokkelhullet\");}})})]}),infoNokkelhullet?/*#__PURE__*/ // Information section for \"Nøkkelhullet\"\n_jsxs(\"div\",{className:\"container info-div row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-10\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Les mer om hvilke krav det stilles for merking av Nokkellhullet p\\xE5 Lovdatas \\\"Forskrift om frivillig merking a n\\u0153ringsmidler med Nokkellhullet\\\":\",/*#__PURE__*/_jsx(\"a\",{href:\"https://lovdata.no/dokument/SF/forskrift/2015-02-18-139\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"lovdata.no\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-2\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"x-button\",icon:faXmarkCircle,onClick:function onClick(){return onClickClose(\"nokkelhullet\");}})})]}):null]}):null,showNokkelhulletResults===false&&/*#__PURE__*/_jsxs(\"div\",{className:\"container n\\xF8kkelhullet-food-negResult-container\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"N\\xF8kkelhullet\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-10\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Produktet innfrir ikke N\\xF8kkelhullet.\"}),showEmptyResult?/*#__PURE__*/_jsx(\"p\",{children:\"** Obligatoriske n\\xE6ringsverdier kan ikke v\\xE6re tomme.\"}):null,mettede?/*#__PURE__*/_jsx(\"p\",{children:\"** Tilsatt fett kan h\\xF8yst inneholde 20 % mettet fett.\"}):null,fett?/*#__PURE__*/_jsx(\"p\",{children:\"** Tilsatt fett verdien kan v\\xE6re h\\xF8yst 3 g/100 g.\"}):null,hvoravSukkerarter?/*#__PURE__*/_jsx(\"p\",{children:\"** Tilsatte sukkerarter verdien kan v\\xE6re h\\xF8yst 1 g/100 g.\"}):null,selectedSaltOrSodium===\"salt\"&&salt?/*#__PURE__*/_jsx(\"p\",{children:\"** Salt verdien kan v\\xE6re h\\xF8yst 0.5 g/100 g.\"}):null,selectedSaltOrSodium===\"sodium\"&&sodium?/*#__PURE__*/_jsx(\"p\",{children:\"** Sodium verdien kan v\\xE6re h\\xF8yst 0.2 g/100 g.\"}):null]}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-2\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"info-button\",icon:faCircleInfo,onClick:function onClick(){return onClickInfo(\"nokkelhullet\");}})})]}),infoNokkelhullet?/*#__PURE__*/ // Information section for \"Nøkkelhullet\"\n_jsxs(\"div\",{className:\"container info-div row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-10\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Les mer om hvordan oppn\\xE5 kriteriene p\\xE5 Lovdata\\u2019s Forskrift om frivillig merking av n\\xE6ringsmidler med N\\xF8kkelhullet:\",/*#__PURE__*/_jsx(\"a\",{href:\"https://lovdata.no/dokument/SF/forskrift/2015-02-18-139\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"lovdata.no\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-2\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"x-button\",icon:faXmarkCircle,onClick:function onClick(){return onClickClose(\"nokkelhullet\");}})})]}):null]}),/*#__PURE__*/_jsx(\"div\",{style:{padding:\"5px\"}}),buttonClicked&&/*#__PURE__*/_jsxs(\"div\",{className:lowSugars&&sugarsFree&&withNoAddedSugars&&containsNaturallyOccurringSugars?\"container ernæringspåstander-food-result-container-all\":!lowSugars&&!sugarsFree&&!withNoAddedSugars&&!containsNaturallyOccurringSugars?\"container ernæringspåstander-food-result-container-none\":\"container ernæringspåstander-food-result-container-some\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Ern\\xE6ringsp\\xE5stander\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-10\",children:[lowSugars?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"** Lavt sukkerinnhold:\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Dette produktet inneholder h\\xF8yst 5 g sukkerarter per 100 g for n\\xE6ringsmidler i fast form, eller h\\xF8yst 2,5 g sukkerarter per 100 ml for n\\xE6ringsmidler i flytende form og oppfyller kravet for \\\"Lavt sukkerinnhold\\\".\"})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"** Produktet innfrir ikke \\\"Lavt sukkerinnhold\\\" p\\xE5standen.\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"For faste n\\xE6ringsmidler, sukkerinnholdet m\\xE5 v\\xE6re h\\xF8yst 5 g per 100 g.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"For flytende n\\xE6ringsmidler, sukkerinnholdet m\\xE5 v\\xE6re h\\xF8yst 2,5 g per 100 ml.\"})]})]}),sugarsFree?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"** Sukkerfri:\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Dette produktet oppfyller kravet for \\\"Sukkerfri\\\" ved \\xE5 inneholde ikke mer enn 0,5 g sukkerarter per 100 g/ml.\"})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"** Produktet innfrir ikke \\\"Sukkerfri\\\" p\\xE5standen.\"}),/*#__PURE__*/_jsx(\"ul\",{children:/*#__PURE__*/_jsx(\"li\",{children:\"Produktet m\\xE5 inneholde h\\xF8yst 0,5 g sukkerarter per 100 g/ml for \\xE5 oppfylle \\\"Sukkerfri\\\" p\\xE5standen.\"})})]}),withNoAddedSugars?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"** Uten tilsatt sukker:\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Dette produktet er ikke tilsatt monosakkarider, disakkarider eller andre n\\xE6ringsmidler p\\xE5 grunn av deres s\\xF8tende egenskaper og oppfyller kravet for \\\"Uten tilsatt sukker\\\".\"})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"** Produktet innfrir ikke \\\"Uten tilsatt sukker\\\" p\\xE5standen.\"}),/*#__PURE__*/_jsx(\"ul\",{children:/*#__PURE__*/_jsx(\"li\",{children:\"Produktet m\\xE5 ikke v\\xE6re tilsatt monosakkarider, disakkarider eller andre n\\xE6ringsmidler p\\xE5 grunn av deres s\\xF8tende egenskaper.\"})})]}),containsNaturallyOccurringSugars?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"** Med et naturlig innhold av sukker:\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Dette produktet inneholder naturlig forekommende sukker og oppfyller kravet for \\\"Med et naturlig innhold av sukker\\\".\"})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"** Produktet innfrir ikke \\\"Med et naturlig innhold av sukker\\\" p\\xE5standen.\"}),/*#__PURE__*/_jsx(\"ul\",{children:/*#__PURE__*/_jsx(\"li\",{children:\"Produktet m\\xE5 inneholde naturlig forekommende sukker og ikke ha tilsatt sukker.\"})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-2\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"info-button\",icon:faCircleInfo,onClick:function onClick(){return onClickInfo(\"ernaerings\");}})})]}),infoErnaerings?/*#__PURE__*/ // Information section for \"Ernæringspåstander\"\n_jsxs(\"div\",{className:\"container info-div row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-10\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Les mer om hvordan oppn\\xE5 kriteriene p\\xE5 Lovdata\\u2019s Forskrift om ern\\xE6rings- og helsep\\xE5stander om n\\xE6ringsmidler:\",/*#__PURE__*/_jsx(\"a\",{href:\"https://lovdata.no/dokument/SF/forskrift/2010-02-17-187/KAPITTEL_1#KAPITTEL_1\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"lovdata.no\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-2\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"x-button\",icon:faXmarkCircle,onClick:function onClick(){return onClickClose(\"ernaerings\");}})})]}):null]}),/*#__PURE__*/_jsx(\"div\",{style:{padding:\"5px\"}}),showHelsepåstander&&/*#__PURE__*/_jsxs(\"div\",{className:\"container helsep\\xE5stander-food-result-container\",style:{background:\"#f2f0b5\"},children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Helsep\\xE5stander\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-10\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Under utvikling. \"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-2\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"info-button\",icon:faCircleInfo,onClick:function onClick(){return onClickInfo(\"helsepåstander\");}})})]}),infoHelsepåstander?/*#__PURE__*/ // Information section for \"Helsepåstander\"\n_jsxs(\"div\",{className:\"container info-div row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-10\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Les mer om hvordan oppn\\xE5 kriteriene p\\xE5 Lovdata\\u2019s Forskrift om ern\\xE6rings- og helsep\\xE5stander om n\\xE6ringsmidler:\",/*#__PURE__*/_jsx(\"a\",{href:\"https://lovdata.no/dokument/SF/forskrift/2010-02-17-187/KAPITTEL_1#KAPITTEL_1\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"lovdata.no\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-2\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"x-button\",icon:faXmarkCircle,onClick:function onClick(){return onClickClose(\"helsepåstander\");}})})]}):null]}),/*#__PURE__*/_jsx(\"div\",{style:{padding:\"15px\"}}),showButtons&&/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-primary\",style:{width:\"200px\",minHeight:\"44px\",marginRight:\"5px\"},children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faSave,style:{marginRight:\"5px\"}}),\"Lagre produkt\"]}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-primary\",style:{width:\"200px\",minHeight:\"44px\",marginRight:\"5px\"},children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faShare,style:{marginRight:\"5px\"}}),\"Del produkt\"]}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-primary\",onClick:function onClick(){return window.location.reload();},style:{width:\"200px\",minHeight:\"44px\",marginRight:\"5px\"},children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faPlus,style:{marginRight:\"5px\"}}),\"Legg til et nytt produkt\"]})]})]})]});};export default Kategori1;","map":{"version":3,"names":["React","useState","useEffect","faCircleExclamation","faBan","faSave","faShare","faPlus","FontAwesomeIcon","Tooltip","keyholeLgog","faCircleInfo","faXmarkCircle","Select","jsx","_jsx","jsxs","_jsxs","Kategori1","_useState","_useState2","_slicedToArray","showNokkelhulletResults","setShowNokkelhulletResults","_useState3","_useState4","showErnaeringsResults","setShowErnaeringsResults","_useState5","_useState6","showHelsepåstander","setShowHelsepåstander","_useState7","_useState8","showEmptyResult","setShowEmptyResult","_useState9","_useState10","foodType","setFoodType","_useState11","_useState12","lowSugars","setLowSugars","_useState13","_useState14","sugarsFree","setSugarsFree","_useState15","_useState16","withNoAddedSugars","setWithNoAddedSugars","_useState17","_useState18","containsNaturallyOccurringSugars","setContainsNaturallyOccurringSugars","_useState19","_useState20","buttonClicked","setButtonClicked","_useState21","_useState22","showButtons","setShowButtons","_useState23","_useState24","infoNokkelhullet","setInfoNokkelhullet","_useState25","_useState26","infoErnaerings","setInfoErnaerings","_useState27","_useState28","infoHelsepåstander","setInfoHelsepåstander","onClickInfo","container","onClickClose","_useState29","_useState30","energikj","setEnergikj","_useState31","_useState32","energikcal","setEnergikcal","_useState33","_useState34","fett","setFett","_useState35","_useState36","fettNull","setFettNull","_useState37","_useState38","mettede","setMettede","_useState39","_useState40","mettedeNull","setMettedeNull","_useState41","_useState42","karbohydrat","setKarbohydrat","_useState43","_useState44","naturligSukker","setNaturligSukker","_useState45","_useState46","hvoravSukkerarter","setHvoravSukkerarter","_useState47","_useState48","hvoravSukkerarterNull","setHvoravSukkerarterNull","_useState49","_useState50","kostfiber","setKostfiber","_useState51","_useState52","protein","setProtein","_useState53","_useState54","salt","setSalt","_useState55","_useState56","saltNull","setSaltNull","_useState57","_useState58","sodium","setSodium","_useState59","_useState60","sodiumNull","setSodiumNull","_useState61","_useState62","nutrition","setNutrition","changeHandle","event","console","log","target","value","_objectSpread","_defineProperty","name","onClick","e","preventDefault","selectsPart","selectedSaltOrSodium","parseFloat","selectUnit","label","_useState63","_useState64","setSelectPart","handlerPart","inputVal","document","getElementsByName","selectNutrient","_useState65","_useState66","setSelectedSaltOrSodium","handleNutrient","foodTypes","className","children","htmlFor","id","options","onChange","placeholder","scope","title","placement","arrow","icon","for","class","type","min","step","src","alt","href","rel","style","padding","background","width","minHeight","marginRight","window","location","reload"],"sources":["/Users/annabatzeri/Desktop/Nøkkelhulet/src/Kategori1.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\"; // import the useState and useeffect hook.\nimport { faCircleExclamation } from \"@fortawesome/free-solid-svg-icons\"; // import an icon.\nimport { faBan } from \"@fortawesome/free-solid-svg-icons\";\nimport { faSave, faShare, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"; // import FontAwesomeIcon component.\nimport Tooltip from \"@mui/material/Tooltip\"; // import Tooltip component.\nimport keyholeLgog from \"./circle-keyhole-logo.png\"; // import an image\nimport { faCircleInfo } from \"@fortawesome/free-solid-svg-icons\"; // import an icon\nimport { faXmarkCircle } from \"@fortawesome/free-solid-svg-icons\"; // import an icon\nimport Select from \"react-select\"; // import Select component\n\n// This component is called Kategori1\nconst Kategori1 = () => {\n  // State variables for showing results and empty result message\n\n  const [showNokkelhulletResults, setShowNokkelhulletResults] = useState(null);\n  const [showErnaeringsResults, setShowErnaeringsResults] = useState(null);\n  const [showHelsepåstander, setShowHelsepåstander] = useState(null);\n  const [showEmptyResult, setShowEmptyResult] = useState(\"\"); // initialize state variable for showing empty result message.\n\n  //state variable to store the user's food type selection (solid or liquid) and the low sugars claim result\n  const [foodType, setFoodType] = useState(\"\");\n  const [lowSugars, setLowSugars] = useState(null);\n\n  //state variable for SugarsFree claim\n  const [sugarsFree, setSugarsFree] = useState(null);\n\n  //state variable to track whether the product meets the WITH NO ADDED SUGARS claim or not\n  const [withNoAddedSugars, setWithNoAddedSugars] = useState(null);\n\n  //state variable to track whether the product meets the \"CONTAINS NATURALLY OCCURRING SUGARS\" claim or not\n  const [\n    containsNaturallyOccurringSugars,\n    setContainsNaturallyOccurringSugars,\n  ] = useState(null);\n\n  // State variable for tracking if the button is clicked\n  const [buttonClicked, setButtonClicked] = useState(false);\n\n  // useEffect hook for checking the conditions for the nutrition claims when button is clicked\n  useEffect(() => {\n    if (buttonClicked) {\n      if (\n        lowSugars &&\n        withNoAddedSugars &&\n        containsNaturallyOccurringSugars &&\n        sugarsFree\n      ) {\n        setShowErnaeringsResults(true);\n      } else {\n        setShowErnaeringsResults(false);\n      }\n    }\n  }, [\n    lowSugars,\n    withNoAddedSugars,\n    containsNaturallyOccurringSugars,\n    buttonClicked,\n    sugarsFree,\n  ]);\n\n  //state for controlling the buttons' visibility\n  const [showButtons, setShowButtons] = useState(false);\n\n  // State variables to control the visibility of the information sections\n  const [infoNokkelhullet, setInfoNokkelhullet] = useState(false);\n  const [infoErnaerings, setInfoErnaerings] = useState(false);\n  const [infoHelsepåstander, setInfoHelsepåstander] = useState(false);\n\n  // Function to show an information section based on the container parameter\n  const onClickInfo = (container) => {\n    if (container === \"nokkelhullet\") {\n      setInfoNokkelhullet(true);\n    } else if (container === \"ernaerings\") {\n      setInfoErnaerings(true);\n    } else if (container === \"helsepåstander\") {\n      setInfoHelsepåstander(true);\n    }\n  };\n\n  // Function to hide an information section based on the container parameter\n  const onClickClose = (container) => {\n    if (container === \"nokkelhullet\") {\n      setInfoNokkelhullet(false);\n    } else if (container === \"ernaerings\") {\n      setInfoErnaerings(false);\n    } else if (container === \"helsepåstander\") {\n      setInfoHelsepåstander(false);\n    }\n  };\n\n  // initialize State variables for handling input fields and validation errors\n  const [energikj, setEnergikj] = useState(false);\n  const [energikcal, setEnergikcal] = useState(false);\n\n  const [fett, setFett] = useState(false);\n  const [fettNull, setFettNull] = useState(false);\n  const [mettede, setMettede] = useState(false);\n  const [mettedeNull, setMettedeNull] = useState(false);\n  const [karbohydrat, setKarbohydrat] = useState(false);\n  const [naturligSukker, setNaturligSukker] = useState(false);\n\n  const [hvoravSukkerarter, setHvoravSukkerarter] = useState(false);\n  const [hvoravSukkerarterNull, setHvoravSukkerarterNull] = useState(false);\n  const [kostfiber, setKostfiber] = useState(false);\n  const [protein, setProtein] = useState(false);\n  const [salt, setSalt] = useState(false);\n  const [saltNull, setSaltNull] = useState(false);\n  const [sodium, setSodium] = useState(false);\n  const [sodiumNull, setSodiumNull] = useState(false);\n\n  // initialize State variable for storing nutrition information entered by user/input values\n  const [nutrition, setNutrition] = useState({\n    energikj: \"\",\n    energikcal: \"\",\n    fett: \"\",\n    mettede: \"\",\n    karbohydrat: \"\",\n    naturligSukker: \"\",\n    hvoravSukkerarter: \"\",\n    kostfiber: \"\",\n    protein: \"\",\n    salt: \"\",\n    sodium: \"\",\n  });\n\n  // Handler for updating nutrition state/state variable based on input field changes/input values\n  const changeHandle = (event) => {\n    console.log(\"changeHandle ===\", event.target, event.target.value);\n    setNutrition({\n      ...nutrition,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  // define function to handle form submission\n  const onClick = (e) => {\n    e.preventDefault();\n    setButtonClicked(true);\n    setShowHelsepåstander(true);\n    setShowButtons(true);\n\n    console.log(\"onclick ===\", selectsPart, nutrition);\n\n    // Check if all required fields are filled out and within valid ranges\n    // The if statement checks if all required inputs are non-empty and meet the nutritional requirements\n    if (\n      nutrition.fett !== \"\" &&\n      nutrition.fett <= 3 &&\n      nutrition.mettede !== \"\" &&\n      nutrition.mettede <= 0.6 &&\n      nutrition.karbohydrat !== \"\" &&\n      nutrition.naturligSukker !== \"\" &&\n      nutrition.hvoravSukkerarter !== \"\" &&\n      nutrition.hvoravSukkerarter <= 1 &&\n      nutrition.kostfiber !== \"\" &&\n      nutrition.protein !== \"\"\n    ) {\n      // If all requirements are met, display the nutrition results\n      setShowNokkelhulletResults(true);\n      // Hide any empty result messages or error messages\n      setShowEmptyResult(false);\n\n      // Check if the user selected \"energikj\" and if nutrition input lable of \"energikj\" is not empty\n      if (selectsPart === \"energikj\" && nutrition.energikj !== \"\") {\n        setEnergikj(false);\n      }\n\n      // Check if the user selected \"energikcal\" and if nutrition input lable of \"energikcal\" is not empty\n      if (selectsPart === \"energikcal\" && nutrition.energikcal !== \"\") {\n        setEnergikcal(false);\n      }\n      // Reset all input validation errors\n\n      setFett(false);\n      setFettNull(false);\n      setMettede(false);\n      setMettedeNull(false);\n      setKarbohydrat(false);\n      setNaturligSukker(false);\n      setHvoravSukkerarter(false);\n      setHvoravSukkerarterNull(false);\n      setKostfiber(false);\n      setProtein(false);\n\n      // If any inputs are missing or do not meet the requirements, show appropriate error messages\n    } else {\n      if (selectsPart === \"energikj\") {\n        console.log(\"energikj ===\", selectsPart, nutrition.energikj);\n        if (nutrition.energikj === \"\" || nutrition.energikj < 0) {\n          console.log(\"energikj ===\", selectsPart, nutrition.energikj);\n          setEnergikj(true);\n          setShowNokkelhulletResults(false);\n          setShowEmptyResult(true);\n        } else {\n          setEnergikj(false);\n        }\n      }\n\n      if (selectsPart === \"energikcal\") {\n        console.log(\"energikcal ===\", selectsPart, nutrition.energikcal);\n        if (nutrition.energikcal === \"\" || nutrition.energikcal < 0) {\n          console.log(\"energikcal ===\", selectsPart, nutrition.energikcal);\n          setEnergikcal(true);\n          setShowNokkelhulletResults(false);\n          setShowEmptyResult(true);\n        } else {\n          setEnergikcal(false);\n        }\n      }\n\n      // repeat for each nutrition value...\n      if (nutrition.fett === \"\" || nutrition.fett < 0) {\n        setFettNull(true);\n        setShowNokkelhulletResults(false);\n        setShowEmptyResult(true);\n      } else {\n        setFettNull(false);\n      }\n      if (nutrition.fett > 3) {\n        setFett(true);\n        setShowNokkelhulletResults(false);\n      } else {\n        setFett(false);\n      }\n\n      if (nutrition.mettede === \"\" || nutrition.mettede < 0) {\n        setMettedeNull(true);\n        setShowNokkelhulletResults(false);\n        setShowEmptyResult(true);\n      } else {\n        setMettedeNull(false);\n      }\n      if (nutrition.mettede > 0.6) {\n        setMettede(true);\n        setShowNokkelhulletResults(false);\n      } else {\n        setMettede(false);\n      }\n\n      // Check if the 'karbohydrat' input is missing or negative, and display an error message if necessary\n      if (nutrition.karbohydrat === \"\" || nutrition.karbohydrat < 0) {\n        setKarbohydrat(true);\n        setShowNokkelhulletResults(false);\n        setShowEmptyResult(true);\n      } else {\n        setKarbohydrat(false);\n      }\n\n      if (nutrition.naturligSukker === \"\" || nutrition.naturligSukker < 0) {\n        setNaturligSukker(true);\n        setShowNokkelhulletResults(false);\n        setShowEmptyResult(true);\n      } else {\n        setNaturligSukker(false);\n      }\n\n      // Check if the 'hvoravSukkerarter' input is missing, negative or above the maximum allowed value (1),\n      // and display an error message if necessary\n      if (\n        nutrition.hvoravSukkerarter === \"\" ||\n        nutrition.hvoravSukkerarter < 0\n      ) {\n        setHvoravSukkerarterNull(true);\n        setShowNokkelhulletResults(false);\n        setShowEmptyResult(true);\n      } else {\n        setHvoravSukkerarterNull(false);\n      }\n      if (nutrition.hvoravSukkerarter > 1) {\n        setHvoravSukkerarter(true);\n        setShowNokkelhulletResults(false);\n      } else {\n        setHvoravSukkerarter(false);\n      }\n\n      if (nutrition.kostfiber === \"\" || nutrition.kostfiber < 0) {\n        setKostfiber(true);\n        setShowNokkelhulletResults(false);\n        setShowEmptyResult(true);\n      } else {\n        setKostfiber(false);\n      }\n\n      if (nutrition.protein === \"\" || nutrition.protein < 0) {\n        setProtein(true);\n        setShowNokkelhulletResults(false);\n        setShowEmptyResult(true);\n      } else {\n        setProtein(false);\n      }\n\n      // If sodium is selected and the input is missing, negative, or over the limit\n      if (\n        selectedSaltOrSodium === \"sodium\" &&\n        (nutrition.sodium === \"\" ||\n          nutrition.sodium < 0 ||\n          nutrition.sodium > 0.2)\n      ) {\n        if (nutrition.sodium === \"\" || nutrition.sodium < 0) {\n          setSodiumNull(true); // set sodiumNull state to true if sodium is missing or negative\n        } else {\n          setSodiumNull(false); // set sodiumNull state to false if sodium is not missing and is not negative\n        }\n        setSodium(true);\n        setShowNokkelhulletResults(false);\n        setShowEmptyResult(true);\n      } else {\n        setSodium(false);\n        setSodiumNull(false); // set sodiumNull state to false if sodium is not missing and is not negative\n      }\n\n      // If salt is selected and the input is missing, negative, or over the limit\n      if (\n        selectedSaltOrSodium === \"salt\" &&\n        (nutrition.salt === \"\" || nutrition.salt < 0 || nutrition.salt > 0.5)\n      ) {\n        if (nutrition.salt === \"\" || nutrition.salt < 0) {\n          setSaltNull(true); // set saltNull state to true if salt is missing or negative\n        } else {\n          setSaltNull(false); // set saltNull state to false if salt is not missing and is not negative\n        }\n        setSalt(true);\n        setShowNokkelhulletResults(false);\n        setShowEmptyResult(true);\n      } else {\n        setSalt(false);\n        setSaltNull(false); // set saltNull state to false if salt is not missing and is not negative\n      }\n    }\n\n    // Check for the \"LOW SUGARS\" claim\n    if (foodType === \"solid\" && parseFloat(nutrition.karbohydrat) <= 5) {\n      setLowSugars(true);\n    } else if (\n      foodType === \"liquid\" &&\n      parseFloat(nutrition.karbohydrat) <= 2.5\n    ) {\n      setLowSugars(true);\n    } else {\n      setLowSugars(false);\n    }\n\n    // Check for the \"SUGARS-FREE\" claim\n    if (foodType === \"solid\" && parseFloat(nutrition.karbohydrat) <= 0.5) {\n      setSugarsFree(true);\n    } else if (\n      foodType === \"liquid\" &&\n      parseFloat(nutrition.karbohydrat) <= 0.5\n    ) {\n      setSugarsFree(true);\n    } else {\n      setSugarsFree(false);\n    }\n\n    // Check the condition for the \"WITH NO ADDED SUGARS\" nutrition claim\n    if (nutrition.hvoravSukkerarter === \"0\" && nutrition.karbohydrat > 0) {\n      setWithNoAddedSugars(true);\n    } else {\n      setWithNoAddedSugars(false);\n    }\n\n    // Check the condition for the \"CONTAINS NATURALLY OCCURRING SUGARS\" nutrition claim\n    if (\n      nutrition.hvoravSukkerarter === \"0\" &&\n      nutrition.karbohydrat === nutrition.naturligSukker\n    ) {\n      setContainsNaturallyOccurringSugars(true);\n    } else {\n      setContainsNaturallyOccurringSugars(false);\n    }\n  };\n\n  // create an array of energy units to select from\n  const selectUnit = [\n    {\n      value: \"energikj\", // This is the value that will be used in the code\n      label: \"(kj)\", // This is the value that will be displayed to the user in the dropdown\n    },\n    {\n      value: \"energikcal\",\n      label: \"(kcal)\",\n    },\n  ];\n\n  // Declare a state variable for the select dropdown.\n  const [selectsPart, setSelectPart] = useState(\"\");\n\n  // A function to handle changes to the select dropdown energy unit\n  const handlerPart = (event) => {\n    const inputVal = document.getElementsByName(event.value); // Get the input elements with the name of the selected option\n    console.log(\"handlerPart ===\", event, nutrition, inputVal); // Log the selected option, current nutrition state, and input elements to the console\n    setSelectPart(event.value); // Update the selectsPart state with the value of the selected option\n  };\n\n  //a selection array  for salt and sodium to select from\n  const selectNutrient = [\n    {\n      value: \"salt\",\n      label: \"Salt (g)\",\n    },\n    {\n      value: \"sodium\",\n      label: \"Natrium (g)\",\n    },\n  ];\n\n  //declare a state variable for the selected nutrient\n  const [selectedSaltOrSodium, setSelectedSaltOrSodium] = useState(\"\");\n\n  //a function to handle the changes to the selected nutrient\n  const handleNutrient = (event) => {\n    setNutrition({ ...nutrition, [selectedSaltOrSodium]: \"\" }); // Clear the previous value\n    setSelectedSaltOrSodium(event.value);\n  };\n\n  //create an array of food types to select from\n  const foodTypes = [\n    {\n      value: \"solid\",\n      label: \"Fast form\",\n    },\n    {\n      value: \"liquid\",\n      label: \"Flytende form\",\n    },\n  ];\n\n  return (\n    <div className=\"row\">\n      {/* This div creates a column layout for the left side of the table */}\n      <div className=\"col-md-6\">\n        {/* the selector (dropdown menu) for choosing the food type. */}\n        <div className=\"form-group\">\n          <label htmlFor=\"foodType\">Velg type matvare:</label>\n          <Select\n            className=\"form-control\"\n            id=\"foodType\"\n            options={foodTypes}\n            onChange={(e) => setFoodType(e.value)} // update the onFoodTypeChange function to directly set the food type state\n            placeholder=\"Velg type matvare\"\n          />\n        </div>\n\n        <h5>\n          Næringsinnhold per 100{\" \"}\n          {foodType === \"solid\" ? \"g\" : foodType === \"liquid\" ? \"ml\" : \"g/ml\"}\n        </h5>\n\n        {/* This div adds a light background color to the table */}\n        <div className=\"bg-light\">\n          {/* This table shows the nutritional information */}\n          <table className=\"table table-striped\">\n            {/* The table header */}\n            <thead>\n              <tr>\n                <th scope=\"col\" className=\"table-font\">\n                  Energi eller næringsstoff\n                </th>\n                <th scope=\"col\" className=\"table-font\">\n                  Mengde\n                </th>\n              </tr>\n            </thead>\n\n            {/* The table body */}\n            <tbody>\n              {/* This row shows the energy content */}\n              <tr className={(energikj, energikcal ? \"alert-box\" : null)}>\n                <th scope=\"row\" className=\"table-font\">\n                  {/* If either the energy (kJ) or energy (kcal) value is missing, an exclamation icon is displayed */}\n                  {energikj && energikcal ? (\n                    <Tooltip\n                      title=\"Mangler verdi i energi (kJ/Kcal) parameter\"\n                      placement=\"right\"\n                      arrow\n                    >\n                      <div className=\"icon\">\n                        <FontAwesomeIcon\n                          className=\"alert-icon\"\n                          icon={faCircleExclamation}\n                        />\n                      </div>\n                    </Tooltip>\n                  ) : null}{\" \"}\n                  {/* This div displays the energy label and unit */}\n                  <div className=\"row\">\n                    <div className=\"col-md-3\">\n                      <label for=\"energiunit\" class=\"form-label\">\n                        Energi\n                      </label>\n                    </div>\n                    {/* This dropdown allows the user to select the unit for energy */}\n                    <div className=\"col-md-6\">\n                      <Select\n                        placeholder={<div>Velg enhet</div>}\n                        className=\"form-select-md mb-3\"\n                        options={selectUnit}\n                        onChange={(e) => handlerPart(e)}\n                      />\n                    </div>\n                  </div>\n                </th>\n                {/* This column allows the user to input the energy value in input field*/}\n                <td>\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"any\"\n                    name={selectsPart}\n                    onChange={changeHandle}\n                    className=\"form-control\"\n                  ></input>\n                </td>\n              </tr>\n\n              {/* Additional rows for other nutrient selections */}\n              {/* This row shows the fat content */}\n              <tr\n                className={\n                  fett ? \"alert-box\" : null || fettNull ? \"alert-box\" : null\n                }\n              >\n                <th scope=\"row\" className=\"table-font\">\n                  {fett ? (\n                    <Tooltip\n                      title=\"Produktet innfrir ikke Nøkkelhullet på grunn av mengden fett. Mengden på fett må være lavere enn eller lik 3/ 100 g for å møte kravene for Nøkkelhullsmerking.\"\n                      placement=\"right\"\n                      arrow\n                    >\n                      <div className=\"icon\">\n                        <FontAwesomeIcon className=\"alert-icon\" icon={faBan} />\n                      </div>\n                    </Tooltip>\n                  ) : null}\n                  {fettNull ? (\n                    <Tooltip\n                      title=\"Mangler verdi i fett parameter\"\n                      placement=\"right\"\n                      arrow\n                    >\n                      <div className=\"icon\">\n                        <FontAwesomeIcon\n                          className=\"alert-icon\"\n                          icon={faCircleExclamation}\n                        />\n                      </div>\n                    </Tooltip>\n                  ) : null}{\" \"}\n                  Fett (g)\n                </th>\n                <td>\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"any\"\n                    name=\"fett\"\n                    value={nutrition.fett}\n                    onChange={changeHandle}\n                    className=\"form-control\"\n                  ></input>\n                </td>\n              </tr>\n\n              {/* This row shows the saturated fat content */}\n              <tr\n                className={\n                  mettede\n                    ? \"alert-box\"\n                    : null || mettedeNull\n                    ? \"alert-box\"\n                    : null\n                }\n              >\n                <th scope=\"row\" className=\"table-font\">\n                  {mettede ? (\n                    <Tooltip\n                      title=\"Produktet innfrir ikke Nøkkelhullet på grunn av mengden mettede fettsyrer. Mengden på mettede fettsyrer må være lavere enn eller lik 0.6 / 100 g for å møte kravene for Nøkkelhullsmerking.\"\n                      placement=\"right\"\n                      arrow\n                    >\n                      <div className=\"icon\">\n                        <FontAwesomeIcon className=\"alert-icon\" icon={faBan} />\n                      </div>\n                    </Tooltip>\n                  ) : null}\n                  {mettedeNull ? (\n                    <Tooltip\n                      title=\"Mangler verdi i mettede fettsyrer parameter\"\n                      placement=\"right\"\n                      arrow\n                    >\n                      <div className=\"icon\">\n                        <FontAwesomeIcon\n                          className=\"alert-icon\"\n                          icon={faCircleExclamation}\n                        />\n                      </div>\n                    </Tooltip>\n                  ) : null}{\" \"}\n                  Mettede fettsyrer (g)\n                </th>\n                {/* This column allows the user to input the saturated fat value */}\n                <td>\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"any\"\n                    name=\"mettede\"\n                    value={nutrition.mettede}\n                    onChange={changeHandle}\n                    className=\"form-control\"\n                  ></input>\n                </td>\n              </tr>\n\n              {/* This row shows the carbohydrate (total sugars)content */}\n              <tr className={karbohydrat ? \"alert-box\" : null}>\n                <th scope=\"row\" className=\"table-font\">\n                  {/* If the \"karbohydrat\" value is missing, display an exclamation icon with a tooltip */}\n                  {karbohydrat ? (\n                    <Tooltip\n                      title=\"Mangler verdi i karbohydrat parameter\"\n                      placement=\"right\"\n                      arrow\n                    >\n                      <div className=\"icon\">\n                        <FontAwesomeIcon\n                          className=\"alert-icon\"\n                          icon={faCircleExclamation}\n                        />\n                      </div>\n                    </Tooltip>\n                  ) : null}{\" \"}\n                  Karbohydrat (g)\n                </th>\n                {/* Input field for \"karbohydrat\" value */}\n                <td>\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"any\"\n                    name=\"karbohydrat\"\n                    value={nutrition.karbohydrat}\n                    onChange={changeHandle}\n                    className=\"form-control\"\n                  ></input>\n                </td>\n              </tr>\n\n              {/* This row shows the natural occuring sugars content */}\n              <tr className={naturligSukker ? \"alert-box\" : null}>\n                <th scope=\"row\" className=\"table-font\">\n                  {/* If the naturligSukker value is missing, display an exclamation icon with a tooltip */}\n                  {naturligSukker ? (\n                    <Tooltip\n                      title=\"Mangler verdi i naturligSukker parameter\"\n                      placement=\"right\"\n                      arrow\n                    >\n                      <div className=\"icon\">\n                        <FontAwesomeIcon\n                          className=\"alert-icon\"\n                          icon={faCircleExclamation}\n                        />\n                      </div>\n                    </Tooltip>\n                  ) : null}{\" \"}\n                  • Naturlig innhold av sukker (g)\n                </th>\n                {/* Input field for Naturlig innhold av sukker  value */}\n                <td>\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"any\"\n                    name=\"naturligSukker\"\n                    value={nutrition.naturligSukker}\n                    onChange={changeHandle}\n                    className=\"form-control\"\n                  ></input>\n                </td>\n              </tr>\n\n              {/* This row shows hvorav tilsatte sukkerarter (added sugars)content */}\n              <tr\n                className={\n                  hvoravSukkerarter\n                    ? \"alert-box\"\n                    : null || hvoravSukkerarterNull\n                    ? \"alert-box\"\n                    : null\n                }\n              >\n                <th scope=\"row\" className=\"table-font\">\n                  {/* If the \"hvoravSukkerarter\" value is too high, display a ban icon with a tooltip */}\n                  {hvoravSukkerarter ? (\n                    <Tooltip\n                      title=\"Produktet innfrir ikke Nøkkelhullet på grunn av mengden hvoravSukkerarter. Mengden på hvoravSukkerarter må være lavere enn eller lik 1 g/ 100 g for å møte kravene for Nøkkelhullsmerking.\"\n                      placement=\"right\"\n                      arrow\n                    >\n                      <div className=\"icon\">\n                        <FontAwesomeIcon className=\"alert-icon\" icon={faBan} />\n                      </div>\n                    </Tooltip>\n                  ) : null}\n                  {/* If the \"hvoravSukkerarter\" value is missing, display an exclamation icon with a tooltip */}\n                  {hvoravSukkerarterNull ? (\n                    <Tooltip\n                      title=\"Mangler verdi i hvorav sukkerarter parameter\"\n                      placement=\"right\"\n                      arrow\n                    >\n                      <div className=\"icon\">\n                        <FontAwesomeIcon\n                          className=\"alert-icon\"\n                          icon={faCircleExclamation}\n                        />\n                      </div>\n                    </Tooltip>\n                  ) : null}{\" \"}\n                  • Hvorav tilsatte sukkerarter (g)\n                </th>\n                {/* Input field for \"hvoravSukkerarter\" value */}\n\n                <td>\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"any\"\n                    name=\"hvoravSukkerarter\"\n                    value={nutrition.hvoravSukkerarter}\n                    onChange={changeHandle}\n                    className=\"form-control\"\n                  ></input>\n                </td>\n              </tr>\n\n              {/* This row shows kostfiber content */}\n              <tr className={kostfiber ? \"alert-box\" : null}>\n                <th scope=\"row\" className=\"table-font\">\n                  {/* If kostfiber is missing, show a exclamation icon */}\n                  {kostfiber ? (\n                    <Tooltip\n                      title=\"Mangler verdi i kostfiber parameter\"\n                      placement=\"right\"\n                      arrow\n                    >\n                      <div className=\"icon\">\n                        <FontAwesomeIcon\n                          className=\"alert-icon\"\n                          icon={faCircleExclamation}\n                        />\n                      </div>\n                    </Tooltip>\n                  ) : null}{\" \"}\n                  • Kostfiber (g)\n                </th>\n                <td>\n                  {/* Input field for kostfiber */}\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"any\"\n                    name=\"kostfiber\"\n                    value={nutrition.kostfiber}\n                    onChange={changeHandle}\n                    className=\"form-control\"\n                  ></input>\n                </td>\n              </tr>\n\n              {/* This row shows the protein content */}\n              <tr className={protein ? \"alert-box\" : null}>\n                <th scope=\"row\" className=\"table-font\">\n                  {/* If the protein value is missing, an exclamation icon is displayed */}\n                  {protein ? (\n                    <Tooltip\n                      title=\"Mangler verdi i protein parameter\"\n                      placement=\"right\"\n                      arrow\n                    >\n                      <div className=\"icon\">\n                        <FontAwesomeIcon\n                          className=\"alert-icon\"\n                          icon={faCircleExclamation}\n                        />\n                      </div>\n                    </Tooltip>\n                  ) : null}{\" \"}\n                  Protein (g)\n                </th>\n                {/* This column allows the user to input the protein value */}\n                <td>\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"any\"\n                    name=\"protein\"\n                    value={nutrition.protein}\n                    onChange={changeHandle}\n                    className=\"form-control\"\n                  ></input>\n                </td>\n              </tr>\n\n              {/* This row shows salt/sodium content */}\n              <tr className={salt || sodium ? \"alert-box\" : null}>\n                <th scope=\"row\" className=\"table-font\">\n                  {/* If either the salt or sodium value is missing, an exclamation icon is displayed */}\n                  {nutrition[selectedSaltOrSodium] ? (\n                    <Tooltip\n                      title={\n                        selectedSaltOrSodium === \"sodium\"\n                          ? \"Sodium must be less than or equal to 0.2g/100g\"\n                          : \"Salt must be less than or equal to 0.5g/100g\"\n                      }\n                      placement=\"right\"\n                      arrow\n                    >\n                      <div className=\"icon\">\n                        <FontAwesomeIcon\n                          className=\"alert-icon\"\n                          icon={faCircleExclamation}\n                        />\n                      </div>\n                    </Tooltip>\n                  ) : null}{\" \"}\n                  {/* This div displays the nutrient label and unit */}\n                  <div className=\"row\">\n                    <div className=\"col-md-3\">\n                      <label for=\"nutrientunit\" class=\"form-label\">\n                        {selectedSaltOrSodium}{\" \"}\n                        {/* Display the selected nutrient (salt or sodium) */}\n                      </label>\n                    </div>\n                    {/* This dropdown allows the user to select the nutrient */}\n                    <div className=\"col-md-6\">\n                      <Select\n                        placeholder={<div>Velg næringsstoff</div>}\n                        className=\"form-select-md mb-3\"\n                        options={selectNutrient}\n                        onChange={(e) => handleNutrient(e)}\n                      />\n                    </div>\n                  </div>\n                </th>\n                {/* This column allows the user to input the nutrient value in input field*/}\n                <td>\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"any\"\n                    name={selectedSaltOrSodium} // Use the selected nutrient as the name\n                    value={nutrition[selectedSaltOrSodium]} // display the current value for the selected nutrient\n                    onChange={changeHandle}\n                    className=\"form-control\"\n                  ></input>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        {/* Button that submits the form and calls the onClick function when clicked */}\n        <div className=\"col-12 button-div\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary btn-lg button-search\"\n            onClick={onClick}\n          >\n            Beregn\n          </button>\n        </div>\n      </div>\n\n      <div className=\"col-md-6\">\n        {/* positive results nøkkelhullet container\" */}\n        {showNokkelhulletResults ? (\n          <div className=\"container nøkkelhullet-food-result-container\">\n            {/* An image with class \"keyhole-logo\" and alt text \"keyhole logo\" */}\n            <img\n              src={keyholeLgog}\n              className=\"keyhole-logo img-fluid\"\n              alt=\"keyhole logo\"\n            />\n            {/* A heading with text \"Nøkkelhullet\" */}\n            <h5>Nøkkelhullet</h5>\n            <div className=\"row\">\n              <div className=\"col-md-10\">\n                <p>Produktet innfrir Nøkkelhullet. </p>\n              </div>\n              <div className=\"col-md-2\">\n                {/* FontAwesome icon with event listener to show the \"Nøkkelhullet\" information section */}\n                <FontAwesomeIcon\n                  className=\"info-button\"\n                  icon={faCircleInfo}\n                  onClick={() => onClickInfo(\"nokkelhullet\")}\n                />\n              </div>\n            </div>\n\n            {infoNokkelhullet ? (\n              // Information section for \"Nøkkelhullet\"\n              <div className=\"container info-div row\">\n                <div className=\"col-md-10\">\n                  {/* A paragraph with a link to Lovdata's \"Forskrift om frivillig merking a nœringsmidler med Nokkellhullet\" */}\n                  <p>\n                    Les mer om hvilke krav det stilles for merking av\n                    Nokkellhullet på Lovdatas \"Forskrift om frivillig merking a\n                    nœringsmidler med Nokkellhullet\":\n                    <a\n                      href=\"https://lovdata.no/dokument/SF/forskrift/2015-02-18-139\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      lovdata.no\n                    </a>\n                  </p>\n                </div>\n                <div className=\"col-md-2\">\n                  {/* FontAwesome icon with event listener to hide the \"Nøkkelhullet\" information section */}\n                  <FontAwesomeIcon\n                    className=\"x-button\"\n                    icon={faXmarkCircle}\n                    onClick={() => onClickClose(\"nokkelhullet\")}\n                  />\n                </div>\n              </div>\n            ) : null}\n          </div>\n        ) : null}\n        {/*Negative results nøkkelhullet container\" */}\n        {showNokkelhulletResults === false && (\n          <div className=\"container nøkkelhullet-food-negResult-container\">\n            <h5>Nøkkelhullet</h5>\n            <div className=\"row\">\n              <div className=\"col-md-10\">\n                <p>Produktet innfrir ikke Nøkkelhullet.</p>\n                {showEmptyResult ? (\n                  <p>** Obligatoriske næringsverdier kan ikke være tomme.</p>\n                ) : null}\n\n                {mettede ? (\n                  <p>** Tilsatt fett kan høyst inneholde 20 % mettet fett.</p>\n                ) : null}\n\n                {fett ? (\n                  <p>** Tilsatt fett verdien kan være høyst 3 g/100 g.</p>\n                ) : null}\n\n                {hvoravSukkerarter ? (\n                  <p>\n                    ** Tilsatte sukkerarter verdien kan være høyst 1 g/100 g.\n                  </p>\n                ) : null}\n\n                {selectedSaltOrSodium === \"salt\" && salt ? (\n                  <p>** Salt verdien kan være høyst 0.5 g/100 g.</p>\n                ) : null}\n\n                {selectedSaltOrSodium === \"sodium\" && sodium ? (\n                  <p>** Sodium verdien kan være høyst 0.2 g/100 g.</p>\n                ) : null}\n              </div>\n              <div className=\"col-md-2\">\n                <FontAwesomeIcon\n                  className=\"info-button\"\n                  icon={faCircleInfo}\n                  onClick={() => onClickInfo(\"nokkelhullet\")}\n                />\n              </div>\n            </div>\n            {infoNokkelhullet ? (\n              // Information section for \"Nøkkelhullet\"\n              <div className=\"container info-div row\">\n                <div className=\"col-md-10\">\n                  <p>\n                    Les mer om hvordan oppnå kriteriene på Lovdata’s Forskrift\n                    om frivillig merking av næringsmidler med Nøkkelhullet:\n                    <a\n                      href=\"https://lovdata.no/dokument/SF/forskrift/2015-02-18-139\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      lovdata.no\n                    </a>\n                  </p>\n                </div>\n                <div className=\"col-md-2\">\n                  <FontAwesomeIcon\n                    className=\"x-button\"\n                    icon={faXmarkCircle}\n                    onClick={() => onClickClose(\"nokkelhullet\")}\n                  />\n                </div>\n              </div>\n            ) : null}\n          </div>\n        )}\n        {/* Spacer */}\n        <div style={{ padding: \"5px\" }}></div>\n\n        {/* container for ernæringspåstander if there are all true results */}\n        {buttonClicked && (\n          <div\n            className={\n              lowSugars &&\n              sugarsFree &&\n              withNoAddedSugars &&\n              containsNaturallyOccurringSugars\n                ? \"container ernæringspåstander-food-result-container-all\"\n                : !lowSugars &&\n                  !sugarsFree &&\n                  !withNoAddedSugars &&\n                  !containsNaturallyOccurringSugars\n                ? \"container ernæringspåstander-food-result-container-none\"\n                : \"container ernæringspåstander-food-result-container-some\"\n            }\n          >\n            <h5>Ernæringspåstander</h5>\n            <div className=\"row\">\n              <div className=\"col-md-10\">\n                {/* Low sugars */}\n                {lowSugars ? (\n                  <div>\n                    <p>** Lavt sukkerinnhold:</p>\n                    <p>\n                      Dette produktet inneholder høyst 5 g sukkerarter per 100 g\n                      for næringsmidler i fast form, eller høyst 2,5 g\n                      sukkerarter per 100 ml for næringsmidler i flytende form\n                      og oppfyller kravet for \"Lavt sukkerinnhold\".\n                    </p>\n                  </div>\n                ) : (\n                  <div>\n                    <p>\n                      ** Produktet innfrir ikke \"Lavt sukkerinnhold\" påstanden.\n                    </p>\n                    <ul>\n                      <li>\n                        For faste næringsmidler, sukkerinnholdet må være høyst 5\n                        g per 100 g.\n                      </li>\n                      <li>\n                        For flytende næringsmidler, sukkerinnholdet må være\n                        høyst 2,5 g per 100 ml.\n                      </li>\n                    </ul>\n                  </div>\n                )}\n\n                {/* \"SUGARS-FREE\" claim */}\n                {sugarsFree ? (\n                  <div>\n                    <p>** Sukkerfri:</p>\n                    <p>\n                      Dette produktet oppfyller kravet for \"Sukkerfri\" ved å\n                      inneholde ikke mer enn 0,5 g sukkerarter per 100 g/ml.\n                    </p>\n                  </div>\n                ) : (\n                  <div>\n                    <p>** Produktet innfrir ikke \"Sukkerfri\" påstanden.</p>\n                    <ul>\n                      <li>\n                        Produktet må inneholde høyst 0,5 g sukkerarter per 100\n                        g/ml for å oppfylle \"Sukkerfri\" påstanden.\n                      </li>\n                    </ul>\n                  </div>\n                )}\n\n                {/* with No added sugars */}\n                {withNoAddedSugars ? (\n                  <div>\n                    <p>** Uten tilsatt sukker:</p>\n                    <p>\n                      Dette produktet er ikke tilsatt monosakkarider,\n                      disakkarider eller andre næringsmidler på grunn av deres\n                      søtende egenskaper og oppfyller kravet for \"Uten tilsatt\n                      sukker\".\n                    </p>\n                  </div>\n                ) : (\n                  <div>\n                    <p>\n                      ** Produktet innfrir ikke \"Uten tilsatt sukker\" påstanden.\n                    </p>\n                    <ul>\n                      <li>\n                        Produktet må ikke være tilsatt monosakkarider,\n                        disakkarider eller andre næringsmidler på grunn av deres\n                        søtende egenskaper.\n                      </li>\n                    </ul>\n                  </div>\n                )}\n\n                {/* Contains naturally occurring sugars */}\n                {containsNaturallyOccurringSugars ? (\n                  <div>\n                    <p>** Med et naturlig innhold av sukker:</p>\n                    <p>\n                      Dette produktet inneholder naturlig forekommende sukker og\n                      oppfyller kravet for \"Med et naturlig innhold av sukker\".\n                    </p>\n                  </div>\n                ) : (\n                  <div>\n                    <p>\n                      ** Produktet innfrir ikke \"Med et naturlig innhold av\n                      sukker\" påstanden.\n                    </p>\n                    <ul>\n                      <li>\n                        Produktet må inneholde naturlig forekommende sukker og\n                        ikke ha tilsatt sukker.\n                      </li>\n                    </ul>\n                  </div>\n                )}\n              </div>\n              <div className=\"col-md-2\">\n                <FontAwesomeIcon\n                  className=\"info-button\"\n                  icon={faCircleInfo}\n                  onClick={() => onClickInfo(\"ernaerings\")}\n                />\n              </div>\n            </div>\n            {infoErnaerings ? (\n              // Information section for \"Ernæringspåstander\"\n              <div className=\"container info-div row\">\n                <div className=\"col-md-10\">\n                  <p>\n                    Les mer om hvordan oppnå kriteriene på Lovdata’s Forskrift\n                    om ernærings- og helsepåstander om næringsmidler:\n                    <a\n                      href=\"https://lovdata.no/dokument/SF/forskrift/2010-02-17-187/KAPITTEL_1#KAPITTEL_1\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      lovdata.no\n                    </a>\n                  </p>\n                </div>\n                <div className=\"col-md-2\">\n                  <FontAwesomeIcon\n                    className=\"x-button\"\n                    icon={faXmarkCircle}\n                    onClick={() => onClickClose(\"ernaerings\")}\n                  />\n                </div>\n              </div>\n            ) : null}\n          </div>\n        )}\n\n        {/* Spacer */}\n        <div style={{ padding: \"5px\" }}></div>\n        {/* container for Helsepåstander results  */}\n        {showHelsepåstander && (\n          <div\n            className=\"container helsepåstander-food-result-container\"\n            style={{ background: \"#f2f0b5\" }}\n          >\n            <h5>Helsepåstander</h5>\n            <div className=\"row\">\n              <div className=\"col-md-10\">\n                <p>Under utvikling. </p>\n              </div>\n              <div className=\"col-md-2\">\n                <FontAwesomeIcon\n                  className=\"info-button\"\n                  icon={faCircleInfo}\n                  onClick={() => onClickInfo(\"helsepåstander\")}\n                />\n              </div>\n            </div>\n            {infoHelsepåstander ? (\n              // Information section for \"Helsepåstander\"\n              <div className=\"container info-div row\">\n                <div className=\"col-md-10\">\n                  <p>\n                    Les mer om hvordan oppnå kriteriene på Lovdata’s Forskrift\n                    om ernærings- og helsepåstander om næringsmidler:\n                    <a\n                      href=\"https://lovdata.no/dokument/SF/forskrift/2010-02-17-187/KAPITTEL_1#KAPITTEL_1\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      lovdata.no\n                    </a>\n                  </p>\n                </div>\n                <div className=\"col-md-2\">\n                  <FontAwesomeIcon\n                    className=\"x-button\"\n                    icon={faXmarkCircle}\n                    onClick={() => onClickClose(\"helsepåstander\")}\n                  />\n                </div>\n              </div>\n            ) : null}\n          </div>\n        )}\n        {/* Spacer */}\n        <div style={{ padding: \"15px\" }}></div>\n        {/* conditional rendering for the buttons using showButtons state */}\n        {showButtons && (\n          <div className=\"d-flex justify-content-between\">\n            {/* Save button */}\n            <button\n              className=\"btn btn-primary\"\n              style={{ width: \"200px\", minHeight: \"44px\", marginRight: \"5px\" }}\n            >\n              <FontAwesomeIcon icon={faSave} style={{ marginRight: \"5px\" }} />\n              Lagre produkt\n            </button>\n\n            {/* Share button */}\n            <button\n              className=\"btn btn-primary\"\n              style={{ width: \"200px\", minHeight: \"44px\", marginRight: \"5px\" }}\n            >\n              <FontAwesomeIcon icon={faShare} style={{ marginRight: \"5px\" }} />\n              Del produkt\n            </button>\n\n            {/* Add a new product button */}\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => window.location.reload()}\n              style={{ width: \"200px\", minHeight: \"44px\", marginRight: \"5px\" }}\n            >\n              <FontAwesomeIcon icon={faPlus} style={{ marginRight: \"5px\" }} />\n              Legg til et nytt produkt\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Kategori1;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}